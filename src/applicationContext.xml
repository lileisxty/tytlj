<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd">
		
	<task:annotation-driven/>
	<mvc:annotation-driven />
	
	<context:annotation-config/>
	<context:component-scan base-package="com.tytlj.www.*"></context:component-scan>
	
	
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
	</bean>
	<!-- maxAge=-1表示浏览器关闭时失效此Cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true"></property>
		<property name="maxAge" value="2592000"></property>
	</bean>
	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="1800000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	<!-- 会话管理 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionValidationInterval" value="1800000"></property>
		<property name="deleteInvalidSessions" value="true"></property>
		<property name="sessionValidationSchedulerEnabled" value="true"></property>
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler"></property>
		<property name="sessionIdCookie" ref="sessionIdCookie"></property>
	</bean>
	<bean id="shirouserdao" class="com.tytlj.www.dao.impl.ShiRoUserDaoImpl"></bean>
	<!-- 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义的ShiroDbRealm.java -->
	<bean id="myRealm" class="com.tytlj.www.util.MyRealm">
		<property name="shiRoUserDao" ref="shirouserdao" />
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
<!-- 			采用shiro MD5把传如的密码加密，然后和数据库密码比对
 -->				
 				<property name="hashAlgorithmName" value="MD5"></property>
			</bean>
		</property>
	</bean>

	<!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm"></property>
		<property name="sessionManager" ref="sessionManager"></property>
	</bean>   
 	<!-- Web应用中，Shiro可控制的web请求必须经过Shiro主过滤器的拦截，Shiro对基于Spring的Web应用提供了完美的支持 -->
 	<!--  shiroFilter必须和web.xml文件中的filter name属性名一致 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口，这个属性是必须的 -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 要求登录时的链接(可根据项目的URL进行替换)，非必须的属性，默认会自动寻找web工程根目录下的/login.jsp页面 -->
		<property name="loginUrl" value="/index"></property>
 		<property name="filters">
			<map>
				<entry key="authc">
					<bean
						class="org.apache.shiro.web.filter.authc.PassThruAuthenticationFilter" />
				</entry>
			</map>
		</property>
		<!-- 使用数据库配置 -->
<!-- 		<property name="filterChainDefinitionMap" ref="filterChainDefinitionMap"></property>
 -->		
 		<property name="filterChainDefinitions">
			<value>
				/index/**=anon<!-- 不需要认证 -->
				/test/**=anon<!-- 不需要认证 -->
				/code/**=anon<!-- 不需要认证 -->
 				/login/**=authc<!-- 认证就可以 -->
				/sysManager/**=authc<!-- 认证就可以 -->
				/pic/**=authc<!-- 认证就可以 -->
				/pieceworkliquidation/**=authc<!-- 认证就可以 -->
				/distribution/**=authc<!-- 认证就可以 -->
				/postPg/**=authc
			</value>
		</property>
	</bean>
 	<bean id="filterChainDefinitionMap" factory-bean="filterChainDefinitionMapBuilder" factory-method="buildFilterChainDefinitionMap"></bean>
	<bean id="filterChainDefinitionMapBuilder" class="com.tytlj.www.util.FilterChainDefinitionMapBuilder"></bean>
</beans>